plugins {
  id 'org.gradle.wrapper'
  id 'com.fizzpod.sweeney' version '2.0.0'
  id 'org.gradle.java'
  id 'org.gradle.war'
  id 'com.ewerk.gradle.plugins.annotation-processor' version '1.0.2'
  id 'com.ewerk.gradle.plugins.artifactory-deb-publish' version '1.0.1'
  id 'com.ewerk.gradle.plugins.auto-value' version '1.0.6'
  id 'com.ewerk.gradle.plugins.integration-test' version '1.0.8'
  id 'com.ewerk.gradle.plugins.querydsl' version '1.0.7'
  id 'com.ewerk.gradle.plugins.dagger' version '1.0.3'
  id 'com.ewerk.gradle.plugins.jaxb2' version '1.0.2'
}

sweeney {
  enforce type: 'jdk', expect: '[1.8, 1.8]'
}

wrapper {
  gradleVersion = "2.12"
}

repositories {
  jcenter()
}

dependencies {
  compile "org.slf4j:slf4j-api:$slf4jVersion"
  compile "org.slf4j:slf4j-simple:$slf4jVersion"
  compile "org.hibernate.javax.persistence:hibernate-jpa-2.1-api:$persistenceApiVersion"
  compile "org.springframework.data:spring-data-mongodb:$springDataMongoVersion"
  compile "org.mongodb.morphia:morphia:$morphiaVersion"
  compile "com.querydsl:querydsl-mongodb:$querydslVersion"

  testCompile "org.testng:testng:$testNgVersion"
  testCompile "org.assertj:assertj-core:$assertjVersion"

  providedRuntime "javax.validation:validation-api:$validationVersion"
}

annotationProcessor {
  library "com.querydsl:querydsl-apt:$querydslVersion"
  processor 'com.querydsl.apt.morphia.MorphiaAnnotationProcessor'
  sourcesDir 'src/morphia/java'
}

autoValue {
  library = "com.google.auto.value:auto-value:$autoValueVersion"
  autoValueSourcesDir = 'src/autoValue/java'
}

querydsl {
  library = "com.querydsl:querydsl-apt:$querydslVersion"
  querydslSourcesDir = 'src/querydsl/java'
  jpa = true
  jdo = false
  hibernate = false
  morphia = false
  roo = false
  springDataMongo = true
  querydslDefault = true
}

dagger {
  library = "com.google.dagger:dagger:$dagger2Version"
  processorLibrary = "com.google.dagger:dagger-compiler:$dagger2Version"
  daggerSourcesDir = 'src/dagger/java'
}

artifactoryDebPublish {
  baseUrl = 'https://artifactory.company.com'
  user = 'a.user'
  password = '***'
  repoKey = 'debian-snapshots'
  distribution = 'jessie'
  component = 'non-free'
  arch = 'amd64'
  archive = file('src/main/resources/helloworld_1.0_amd64.deb')
}

jaxb2 {
  xjc {
    'model-classes' {
      basePackage = 'com.ewerk.gradle.plugins.sample'
      schema = 'src/main/xsd/model.xsd'
    }
  }
}

test {
  useTestNG()
  maxHeapSize = '128m'
}

integrationTest {
  useTestNG()
  maxHeapSize = '128m'
}
